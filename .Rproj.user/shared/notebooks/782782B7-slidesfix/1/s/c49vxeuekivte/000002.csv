"0","## Now let's do the logistic regression ----"
"0","# turn off factors for DV"
"0","sent_new <- as.numeric(d$sent)"
"0","sent_new <- sent_new - 1"
"0","summary(sent_new) # sanity check - to check if it worked"
"1","   Min. "
"1","1st Qu. "
"1"," Median "
"1","   Mean "
"1","3rd Qu. "
"1","   Max. "
"1","
"
"1","    0.0 "
"1","    0.0 "
"1","    0.5 "
"1","    0.5 "
"1","    1.0 "
"1","    1.0 "
"1","
"
"0","## model 1 "
"0","glm1 <- glm(formula = sent ~ trust, data = d, family = binomial(link = ""logit""))"
"0","summary(glm1)"
"1","
Call:
"
"1",""
"1","glm(formula = sent ~ trust, family = binomial(link = ""logit""), 
    data = d)"
"1",""
"1","

"
"1","Deviance Residuals: 
"
"1","     Min  "
"1","      1Q  "
"1","  Median  "
"1","      3Q  "
"1","     Max  "
"1","
"
"1","-1.37084  "
"1","-1.17343  "
"1"," 0.06317  "
"1"," 1.16488  "
"1"," 1.40920  "
"1","
"
"1","
Coefficients:
"
"1","           "
"1"," Estimate"
"1"," Std. Error"
"1"," z value"
"1"," Pr(>|z|)"
"1","   "
"1","
(Intercept)"
"1","   0.9860"
"1","     0.3708"
"1","   2.659"
"1","  0.00783"
"1"," **"
"1","
trust      "
"1","  -0.3542"
"1","     0.1306"
"1","  -2.712"
"1","  0.00669"
"1"," **"
"1","
"
"1","---
Signif. codes:  "
"1",""
"1","0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1"
"1","
"
"1","
(Dispersion parameter for "
"1",""
"1","binomial"
"1",""
"1"," family taken to be "
"1",""
"1","1"
"1",""
"1",")

"
"1",""
"1","    Null deviance: 1028.6  on 741  degrees of freedom
"
"1",""
"1","Residual deviance: 1021.1  on 740  degrees of freedom
"
"1","AIC: "
"1",""
"1","1025.1"
"1",""
"1","

"
"1",""
"1","Number of Fisher Scoring iterations: "
"1",""
"1","4"
"1",""
"1","
"
"1","
"
"0","# Use exp function to get the odds ratio and confinit for CI - use cbind to "
"0","# display  both together"
"0","model_1_stats <- exp(cbind(OR = (coef(glm1)), confint(glm1, level = 0.95))) "
"2","Waiting for profiling to be done...
"
"0","model_1_stats"
"1","           "
"1","       OR"
"1","     2.5 %"
"1","    97.5 %"
"1","
(Intercept)"
"1"," 2.680470"
"1"," 1.3017242"
"1"," 5.5786892"
"1","
trust      "
"1"," 0.701715"
"1"," 0.5419244"
"1"," 0.9048912"
"1","
"
"0","##  Bayesian analysis for model 1 - this is not used in the presentation and is done to further our own understanding of the data "
"0","B_glm1 <- stan_glm(formula = sent ~ trust, data = d, family = ""binomial"", "
"0","                   refresh = F, seed = 123)"
"0","summary(B_glm1)"
"1","
Model Info:"
"1","
 function:    "
"1"," "
"1","stan_glm"
"1","
 family:      "
"1"," "
"1","binomial [logit]"
"1","
 formula:     "
"1"," "
"1","sent ~ trust"
"1","
 algorithm:   "
"1"," "
"1","sampling"
"1","
 sample:      "
"1"," "
"1","4000"
"1"," "
"1","(posterior sample size)"
"1","
 priors:      "
"1"," "
"1","see help('prior_summary')"
"1","
 observations:"
"1"," "
"1","742"
"1","
 predictors:  "
"1"," "
"1","2"
"1","

Estimates:
"
"1","           "
"1","   mean"
"1","   sd"
"1","   10%"
"1","   50%"
"1","   90%"
"1","
(Intercept)"
"1","  1.0  "
"1","  0.4"
"1","  0.5 "
"1","  1.0 "
"1","  1.4 "
"1","
trust      "
"1"," -0.4  "
"1","  0.1"
"1"," -0.5 "
"1"," -0.4 "
"1"," -0.2 "
"1","
"
"1","
Fit Diagnostics:
"
"1","        "
"1","   mean"
"1","   sd"
"1","   10%"
"1","   50%"
"1","   90%"
"1","
mean_PPD"
"1"," 0.5   "
"1"," 0.0 "
"1"," 0.5  "
"1"," 0.5  "
"1"," 0.5  "
"1","
"
"1","
The mean_ppd is the sample average posterior predictive "
"1",""
"1","distribution of the outcome variable "
"1",""
"1","(for details see help('summary.stanreg')).
"
"1","
"
"1",""
"1","MCMC diagnostics"
"1",""
"1","
"
"1","             "
"1"," mcse"
"1"," Rhat"
"1"," n_eff"
"1","
(Intercept)  "
"1"," 0.0 "
"1"," 1.0 "
"1"," 2688 "
"1","
trust        "
"1"," 0.0 "
"1"," 1.0 "
"1"," 2655 "
"1","
mean_PPD     "
"1"," 0.0 "
"1"," 1.0 "
"1"," 3434 "
"1","
log-posterior"
"1"," 0.0 "
"1"," 1.0 "
"1"," 1723 "
"1","
"
"1","
For each parameter, mcse is Monte Carlo standard error, "
"1",""
"1","n_eff is a crude measure of effective sample size, "
"1",""
"1","and Rhat is the potential scale reduction factor on split chains"
"1",""
"1"," (at convergence Rhat=1).
"
"0","# Use exp function to get the odds ratio and posterior_interval for CI - use "
"0","# cbind to display both together"
"0","model_1_Bays_stats <- exp(cbind(OR = coef(B_glm1), posterior_interval(B_glm1))) "
